//Concert Tickets
// Jridi
#include <bits/stdc++.h>
using namespace std;
void solve() {
    int n, m;
    cin >> n >> m;
    multiset<int> ticketPrices;
    
    // Read ticket prices
    for (int i = 0; i < n; i++) {
        int price;
        cin >> price;
        ticketPrices.insert(price);
    }
    
    // Read customer offers
    vector<int> customers(m);
    for (int i = 0; i < m; i++) {
        cin >> customers[i];
    }

    // Process each customer offer
    for (int i = 0; i < m; i++) {
        int offer = customers[i];
        auto it = ticketPrices.upper_bound(offer);
        
        if (it == ticketPrices.begin()) {
            // No ticket prices are less than or equal to the offer
            cout << -1 << endl;
        } else {
            // Find the closest lower or equal ticket price
            it--; // Move iterator to the largest element <= offer
            cout << *it << endl;
            ticketPrices.erase(it); // Remove the used ticket price
        }
    }
}


int main()
{
    int t = 1;
    //cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}


